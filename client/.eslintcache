[{"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\index.js":"1","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\App.js":"2","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\Home.js":"3","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Login.js":"4","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Dashboard.js":"5","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Register.js":"6","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\user.js":"7","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Timer.js":"8"},{"size":531,"mtime":1611290611520,"results":"9","hashOfConfig":"10"},{"size":1709,"mtime":1611350943314,"results":"11","hashOfConfig":"10"},{"size":422,"mtime":1611307727499,"results":"12","hashOfConfig":"10"},{"size":1753,"mtime":1611292028776,"results":"13","hashOfConfig":"10"},{"size":2188,"mtime":1611347514021,"results":"14","hashOfConfig":"10"},{"size":1755,"mtime":1611290268144,"results":"15","hashOfConfig":"10"},{"size":883,"mtime":1611307369701,"results":"16","hashOfConfig":"10"},{"size":1288,"mtime":1611350289168,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tm4r19",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\index.js",[],["37","38"],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\App.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\Home.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Login.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Dashboard.js",["39"],"import React, { Fragment ,useEffect,useState} from \"react\";\nimport {Container,Row,Col} from 'react-bootstrap';\nimport UserIcon from './images/user';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Button from 'react-bootstrap/Button';\nimport Timer from './Timer';\n\nconst Dashboard = ({setAuth})=>{\n    const[name,setName] = useState(\"\");\n    const[email,setEmail] = useState(\"\");\n    const[badgerbucks,setBadgerbucks] = useState(\"\");\n\n    async function getNameAndReward(){\n        try {\n            const response = await fetch(\"http://localhost:5000/dashboard/\",{\n                method:\"GET\",\n                headers: {\"token\": localStorage.token}\n            });\n\n            const parseRes = await response.json();\n\n            setName(parseRes.user_name);\n            setEmail(parseRes.user_email);\n            setBadgerbucks(parseRes.badgerbucks);\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n\n    useEffect(() => {\n        getNameAndReward();\n    },[]);\n\n    const logout = (e) => {\n        e.preventDefault();\n        localStorage.removeItem(\"token\");\n        setAuth(false);\n    }\n\n    const logoutPopover = (\n        <Popover id=\"popover-basic\" >\n          <Popover.Content>\n              {name} <br></br> {email}<br></br> \n          <button className=\"btn btn-danger mt-4\" onClick={e=> logout(e)}>Logout</button>\n    </Popover.Content>\n        </Popover>\n      );\n\n    return(\n        <Fragment>\n            <Container className=\"mt-4 container-fluid\">\n                <Row>\n                    <Col xs={9} ><h2>Dashboard</h2></Col>\n                    <Col xs={3}><OverlayTrigger  trigger=\"click\" key=\"left\" placement=\"left\" overlay={logoutPopover}>\n                    <Button variant=\"outline-dark\" ><UserIcon class=\"w-100\"/></Button>\n  </OverlayTrigger></Col>\n                </Row>\n\n                </Container>\n                <Container>\n                    <Row>\n                        <Col xs={12}><Timer/></Col>\n                    </Row>\n                </Container>\n\n            <div></div>\n        \n\n        </Fragment>\n    );\n};\n\nexport default Dashboard;\n","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Register.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\user.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Timer.js",["40","41","42","43","44","45","46","47"],"import React,{useState} from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport Button from 'react-bootstrap/Button';\n\nexport default function Timer() {\n\n    const [sessionTimer,setSessionTimer] = useState(25);\n    const [sessionCounter,setSessionCounter] = useState(4);\n    //State to start/pause timer\n    const [sessionStarts,setSessionStarts] = useState(false);\n    const [sessionTitle,setSessionTitle] = useState(\"Start\");\n    const [breakTimer,setBreakTimer] = useState(5);\n    const [isInSession,setIsInSession] = useState(false);\n    const [completeTimer,setCompleteTimer] = useState(false);\n\n    const onClick = () => {\n        setSessionStarts(true);\n        setSessionTitle(\"Pause\");\n        if(sessionStarts===true){\n            setSessionStarts(false);\n            setSessionTitle(\"Start\");\n        }\n    };\n\n\n    \n    return (\n        <div>\n            <CountdownCircleTimer\n    onComplete={() => {\n      // do your stuff here\n      setCompleteTimer(true);\n      console.log(completeTimer);\n      return [true, 1500] // repeat animation in 1.5 seconds\n    }}\n    isPlaying = {sessionStarts}\n    duration={10}\n    colors=\"#A30000\"\n  />\n  <Button variant=\"outline-danger\" onClick={()=>onClick()}>{sessionTitle}</Button>\n        </div>\n    );\n}",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":12,"column":11,"nodeType":"54","messageId":"55","endLine":12,"endColumn":22},{"ruleId":"52","severity":1,"message":"56","line":7,"column":12,"nodeType":"54","messageId":"55","endLine":7,"endColumn":24},{"ruleId":"52","severity":1,"message":"57","line":7,"column":25,"nodeType":"54","messageId":"55","endLine":7,"endColumn":40},{"ruleId":"52","severity":1,"message":"58","line":8,"column":12,"nodeType":"54","messageId":"55","endLine":8,"endColumn":26},{"ruleId":"52","severity":1,"message":"59","line":8,"column":27,"nodeType":"54","messageId":"55","endLine":8,"endColumn":44},{"ruleId":"52","severity":1,"message":"60","line":12,"column":12,"nodeType":"54","messageId":"55","endLine":12,"endColumn":22},{"ruleId":"52","severity":1,"message":"61","line":12,"column":23,"nodeType":"54","messageId":"55","endLine":12,"endColumn":36},{"ruleId":"52","severity":1,"message":"62","line":13,"column":12,"nodeType":"54","messageId":"55","endLine":13,"endColumn":23},{"ruleId":"52","severity":1,"message":"63","line":13,"column":24,"nodeType":"54","messageId":"55","endLine":13,"endColumn":38},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'badgerbucks' is assigned a value but never used.","Identifier","unusedVar","'sessionTimer' is assigned a value but never used.","'setSessionTimer' is assigned a value but never used.","'sessionCounter' is assigned a value but never used.","'setSessionCounter' is assigned a value but never used.","'breakTimer' is assigned a value but never used.","'setBreakTimer' is assigned a value but never used.","'isInSession' is assigned a value but never used.","'setIsInSession' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]