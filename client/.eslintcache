[{"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\index.js":"1","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\App.js":"2","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Login.js":"3","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Dashboard.js":"4","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Register.js":"5","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\user.js":"6","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Timer.js":"7","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Home.js":"8","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\LoginIcon.js":"9","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\RegisterIcon.js":"10"},{"size":531,"mtime":1611290611520,"results":"11","hashOfConfig":"12"},{"size":2186,"mtime":1612602615315,"results":"13","hashOfConfig":"12"},{"size":2968,"mtime":1612602349073,"results":"14","hashOfConfig":"12"},{"size":3779,"mtime":1612601315231,"results":"15","hashOfConfig":"12"},{"size":4288,"mtime":1612602436443,"results":"16","hashOfConfig":"12"},{"size":883,"mtime":1611307369701,"results":"17","hashOfConfig":"12"},{"size":5387,"mtime":1611466862024,"results":"18","hashOfConfig":"12"},{"size":2251,"mtime":1611446014182,"results":"19","hashOfConfig":"12"},{"size":16086,"mtime":1612584358364,"results":"20","hashOfConfig":"12"},{"size":59955,"mtime":1612589534494,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tm4r19",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\index.js",[],["45","46"],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\App.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Login.js",["47"],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Dashboard.js",["48"],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Register.js",["49"],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\user.js",[],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Timer.js",["50","51","52","53"],"import React,{useState,useEffect} from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport Button from 'react-bootstrap/Button';\nimport {Container,Row,Col} from 'react-bootstrap';\n\nexport default function Timer({addBadgerBucks}) {\n    \n////////////////////////////////////////\n    function TimerOptions(){\n        \n\n        //For sessions\n\n        const [sessionComplete,setSessionComplete] = useState(false);\n        const [numOfSession,setNumOfSession] = useState(1);\n        const [sessionStart,setSessionStart] = useState(false);\n        const [sessionState,setSessionState] = useState(\"Start Badgerdoro\");\n        \n\n        //For breaks\n\n        const [breakComplete,setBreakComplete] = useState(false);\n        const [breakStart,setBreakStart] = useState(true);\n        const [breakState,setBreakState] = useState(\"Pause Badgerdoro\");\n\n        const sessionChildren = ({ remainingTime }) => {\n            const minutes = Math.floor(remainingTime / 60);\n            const seconds = remainingTime % 60;\n\n            const outputMinutes = (minutes<10?'0' : '')+minutes;\n            const outputSeconds = (seconds<10?'0' : '')+seconds;\n\n            let outputPhrase = '';\n\n            switch(numOfSession){\n                case 1:\n                    outputPhrase =  <p>Let's get focused!</p>;\n                    break;\n                case 2:\n                    outputPhrase = <p>Two is your number for the day.</p>;\n                    break;\n                case 3:\n                    outputPhrase = <p>You are so three!</p>;\n                    break;\n                case 4:\n                    outputPhrase = <p>Amazing!</p>\n                    break;\n            };\n        \n\n            \n\n            const output = <div className=\"text-center\"><h1>{outputMinutes} : {outputSeconds}</h1>{outputPhrase}</div>\n          \n            return output\n          };\n        //Start/Pause the Session timer\n        const onClickSession = () => {\n            if(sessionStart === false){\n                setSessionStart(true);\n                setSessionState(\"Pause Badgerdoro\");}\n            else{\n                setSessionStart(false);\n                setSessionState(\"Start Badgerdoro\");\n            }\n            \n        };\n\n\n        const  sessionIsComplete =   () =>{\n            addBadgerBucks();\n            \n            setSessionComplete(!sessionComplete);\n            setSessionStart(!sessionStart);\n            setNumOfSession(numOfSession+1);\n                \n            \n        }\n\n        const breakIsComplete = () =>{\n            setBreakComplete(!breakComplete);\n            setSessionStart(!sessionStart);\n            setSessionState(\"Start Badgerdoro\");\n            setSessionComplete(!sessionComplete);\n        }\n\n        //Start/Pause the break timer\n        const onClickBreak = () => {\n            if(breakStart === false){\n                setBreakStart(true);\n                setBreakState(\"Pause Badgerdoro\");}\n            else{\n                setBreakStart(false);\n                setBreakState(\"Start Badgerdoro\");\n            }\n            \n        };\n\n        //Reset timer\n        const onClickReset = () => {\n           setSessionComplete(false);\n           setNumOfSession(1);\n           setSessionStart(false);\n           setSessionState(\"Start Badgerdoro\");\n            \n        };\n\n        // useEffect(()=>{\n        //     sessionIsComplete();\n        // });\n\n       \n\n        const firstDiv = <div><div class=\"d-flex justify-content-center\"><CountdownCircleTimer\n        onComplete={() => {\n          // do your stuff here\n            sessionIsComplete();\n            console.log(numOfSession);\n    \n    \n          return [false, 0] // repeat animation in 1.5 seconds\n        }}\n        isPlaying = {sessionStart}\n        colors = \"#f15156\"\n        duration={3}\n        children = {(remainingTime) => sessionChildren(remainingTime)}\n        size={300}\n      /></div>\n      <div class= \"d-flex justify-content-center \"><Button variant=\"outline-danger mt-4  \"  onClick={()=>onClickSession()}>{sessionState}</Button></div>\n\n      \n      </div>;\n\n      const secondDiv = <CountdownCircleTimer \n      onComplete={() => {\n        // do your stuff here\n          breakIsComplete();\n  \n  \n        return [false, 0] // repeat animation in 1.5 seconds\n      }}\n      isPlaying = {breakStart}\n      duration={5}\n      colors=\"#f15156\"\n      children = {(remainingTime) => sessionChildren(remainingTime)}\n      size={300}/>\n    ;\n\n    const thirdDiv = <div><h4 class=\"text-center\">Congratulations!! You have completed all 4 Badgerdoro sessions.</h4><div class=\"d-flex justify-content-center\"><Button variant=\"outline-danger mt-4  \"  onClick={()=>onClickReset()}>Reset Badgerdoro</Button></div></div>;\n        \n\n    \n\n        if(!sessionComplete){\n            return(firstDiv);\n            \n        }\n        else if(numOfSession===5){\n            return(thirdDiv);\n        }\n        else{\n            console.log(sessionComplete, breakStart);\n            return(secondDiv);\n        }\n\n    \n\n\n    \n        \n        };\n    \n///////////////////////////////////////////\n    return (\n        <div>\n            <Container>\n                <Row  className=\"justify-content-center mt-4\"><Col xs={12} className=\"d-flex justify-content-center\"><TimerOptions/></Col></Row>\n            </Container>\n            \n        </div>\n    )\n}\n","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\Home.js",["54","55","56","57"],"import React, { useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Button, Overlay, Popover } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Timer from \"./Timer\";\r\n\r\nimport \"./Home.css\";\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <div class=\"area vw-100\">\r\n        <ul class=\"circles\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <Container className=\"mt-4 mb-lg-4 \">\r\n            <Row>\r\n              <Col xs={8} lg={11} xl={11}></Col>\r\n              <Col xs={4} lg={1} xl={1}>\r\n                <div class=\"d-flex justify-content-end mr-2\">\r\n                  <div class=\"mr-2\">\r\n                    <Link to=\"/login\">\r\n                      <Button variant=\"outline-light\">Login</Button>\r\n                    </Link>{\" \"}\r\n                  </div>\r\n                  <p class=\"mt-2\">or</p>\r\n                  <div class=\"ml-2\">\r\n                    <Link to=\"/register\">\r\n                      <Button class=\"ml-2 \" variant=\"outline-light\">\r\n                        Register\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={7} lg={8}></Col>\r\n              <Col xs={5} lg={4}>\r\n                <div class=\"mt-2 ml-3\">\r\n                  <p class=\"text-right\">to start earning BadgerBucks!</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={12}>\r\n                {\" \"}\r\n                <div class=\"context\">\r\n                  <h1>Badgerdoro </h1>\r\n                  <h4>get rewarded for being productive!</h4>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"mt-4 mb-lg-4 container-fluid\">\r\n            <Row>\r\n              <Col lg={12}>\r\n                {\" \"}\r\n                <Timer></Timer>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\LoginIcon.js",["58"],"F:\\Users\\vehan\\Documents\\FullStackDev\\badgerdoro\\client\\src\\components\\images\\RegisterIcon.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":56,"column":19,"nodeType":"66","messageId":"67","endLine":56,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":1,"column":26,"nodeType":"66","messageId":"67","endLine":1,"endColumn":34},{"ruleId":"64","severity":1,"message":"69","line":1,"column":24,"nodeType":"66","messageId":"67","endLine":1,"endColumn":33},{"ruleId":"64","severity":1,"message":"70","line":24,"column":16,"nodeType":"66","messageId":"67","endLine":24,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":35,"column":13,"nodeType":"73","messageId":"74","endLine":48,"endColumn":14},{"ruleId":"64","severity":1,"message":"75","line":88,"column":15,"nodeType":"66","messageId":"67","endLine":88,"endColumn":27},{"ruleId":"64","severity":1,"message":"76","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"77","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":33},{"ruleId":"64","severity":1,"message":"78","line":2,"column":39,"nodeType":"66","messageId":"67","endLine":2,"endColumn":46},{"ruleId":"64","severity":1,"message":"79","line":2,"column":48,"nodeType":"66","messageId":"67","endLine":2,"endColumn":55},{"ruleId":"80","severity":1,"message":"81","line":6,"column":115,"nodeType":"82","endLine":6,"endColumn":151},{"ruleId":"80","severity":1,"message":"81","line":6,"column":115,"nodeType":"82","endLine":6,"endColumn":151},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'useEffect' is defined but never used.","'breakState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'onClickBreak' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Overlay' is defined but never used.","'Popover' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]