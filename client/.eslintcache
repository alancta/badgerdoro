[{"/Users/alan/side-projects/badgerdoro/client/src/index.js":"1","/Users/alan/side-projects/badgerdoro/client/src/App.js":"2","/Users/alan/side-projects/badgerdoro/client/src/components/Dashboard.js":"3","/Users/alan/side-projects/badgerdoro/client/src/components/Register.js":"4","/Users/alan/side-projects/badgerdoro/client/src/components/Login.js":"5","/Users/alan/side-projects/badgerdoro/client/src/components/Timer.js":"6","/Users/alan/side-projects/badgerdoro/client/src/components/images/user.js":"7","/Users/alan/side-projects/badgerdoro/client/src/components/Home.js":"8"},{"size":511,"mtime":1611430403165,"results":"9","hashOfConfig":"10"},{"size":2099,"mtime":1611435951066,"results":"11","hashOfConfig":"10"},{"size":2963,"mtime":1611430403162,"results":"12","hashOfConfig":"10"},{"size":1755,"mtime":1611430403163,"results":"13","hashOfConfig":"10"},{"size":1753,"mtime":1611430403162,"results":"14","hashOfConfig":"10"},{"size":5193,"mtime":1611430403163,"results":"15","hashOfConfig":"10"},{"size":883,"mtime":1611430403164,"results":"16","hashOfConfig":"10"},{"size":2174,"mtime":1611445639456,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ssyibc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alan/side-projects/badgerdoro/client/src/index.js",[],["36","37"],"/Users/alan/side-projects/badgerdoro/client/src/App.js",[],"/Users/alan/side-projects/badgerdoro/client/src/components/Dashboard.js",[],"/Users/alan/side-projects/badgerdoro/client/src/components/Register.js",[],"/Users/alan/side-projects/badgerdoro/client/src/components/Login.js",[],"/Users/alan/side-projects/badgerdoro/client/src/components/Timer.js",["38","39","40","41"],"import React,{useState,useEffect} from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport Button from 'react-bootstrap/Button';\nimport {Container,Row,Col} from 'react-bootstrap';\n\nexport default function Timer() {\n    \n////////////////////////////////////////\n    function TimerOptions(){\n\n        //For sessions\n\n        const [sessionComplete,setSessionComplete] = useState(false);\n        const [numOfSession,setNumOfSession] = useState(1);\n        const [sessionStart,setSessionStart] = useState(false);\n        const [sessionState,setSessionState] = useState(\"Start Badgerdoro\");\n        \n\n        //For breaks\n\n        const [breakComplete,setBreakComplete] = useState(false);\n        const [breakStart,setBreakStart] = useState(true);\n        const [breakState,setBreakState] = useState(\"Pause Badgerdoro\");\n\n        const sessionChildren = ({ remainingTime }) => {\n            const minutes = Math.floor(remainingTime / 60);\n            const seconds = remainingTime % 60;\n\n            const outputMinutes = (minutes<10?'0' : '')+minutes;\n            const outputSeconds = (seconds<10?'0' : '')+seconds;\n\n            let outputPhrase = '';\n\n            switch(numOfSession){\n                case 1:\n                    outputPhrase =  <p>Let's get focused!</p>;\n                    break;\n                case 2:\n                    outputPhrase = <p>Two is your number for the day.</p>;\n                    break;\n                case 3:\n                    outputPhrase = <p>You are so three!</p>;\n                    break;\n                case 4:\n                    outputPhrase = <p>Amazing!</p>\n                    break;\n            };\n        \n\n            \n\n            const output = <div className=\"text-center\"><h1>{outputMinutes} : {outputSeconds}</h1>{outputPhrase}</div>\n          \n            return output\n          };\n        //Start/Pause the Session timer\n        const onClickSession = () => {\n            if(sessionStart === false){\n                setSessionStart(true);\n                setSessionState(\"Pause Badgerdoro\");}\n            else{\n                setSessionStart(false);\n                setSessionState(\"Start Badgerdoro\");\n            }\n            \n        };\n\n\n        const sessionIsComplete = () =>{\n            setSessionComplete(!sessionComplete);\n                setSessionStart(!sessionStart);\n                setNumOfSession(numOfSession+1);\n            \n        }\n\n        const breakIsComplete = () =>{\n            setBreakComplete(!breakComplete);\n            setSessionStart(!sessionStart);\n            setSessionState(\"Start Badgerdoro\");\n            setSessionComplete(!sessionComplete);\n        }\n\n        //Start/Pause the break timer\n        const onClickBreak = () => {\n            if(breakStart === false){\n                setBreakStart(true);\n                setBreakState(\"Pause Badgerdoro\");}\n            else{\n                setBreakStart(false);\n                setBreakState(\"Start Badgerdoro\");\n            }\n            \n        };\n\n        //Reset timer\n        const onClickReset = () => {\n           setSessionComplete(false);\n           setNumOfSession(1);\n           setSessionStart(false);\n           setSessionState(\"Start Badgerdoro\");\n            \n        };\n\n        const firstDiv = <div><div class=\"d-flex justify-content-center\"><CountdownCircleTimer\n        onComplete={() => {\n          // do your stuff here\n            sessionIsComplete();\n            console.log(numOfSession);\n    \n    \n          return [false, 0] // repeat animation in 1.5 seconds\n        }}\n        isPlaying = {sessionStart}\n        colors = \"#f15156\"\n        duration={3}\n        children = {(remainingTime) => sessionChildren(remainingTime)}\n        size={300}\n      /></div>\n      <div class= \"d-flex justify-content-center \"><Button variant=\"outline-danger mt-4  \"  onClick={()=>onClickSession()}>{sessionState}</Button></div>\n\n      \n      </div>;\n\n      const secondDiv = <CountdownCircleTimer\n      onComplete={() => {\n        // do your stuff here\n          breakIsComplete();\n  \n  \n        return [false, 0] // repeat animation in 1.5 seconds\n      }}\n      isPlaying = {breakStart}\n      duration={5}\n      colors=\"#f15156\"\n      children = {(remainingTime) => sessionChildren(remainingTime)}\n      size={300}/>\n    ;\n\n    const thirdDiv = <div><h4 class=\"text-center\">Congratulations!! You have completed all 4 Badgerdoro sessions.</h4><div class=\"d-flex justify-content-center\"><Button variant=\"outline-danger mt-4  \"  onClick={()=>onClickReset()}>Reset Badgerdoro</Button></div></div>\n        \n        if(!sessionComplete){\n            return(firstDiv);\n            \n        }\n        else if(numOfSession===5){\n            return(thirdDiv);\n        }\n        else{\n            console.log(sessionComplete, breakStart);\n            return(secondDiv);\n        }\n\n        \n        };\n///////////////////////////////////////////\n    return (\n        <div>\n            <Container>\n                <Row  className=\"justify-content-center mt-4\"><Col xs={12} className=\"d-flex justify-content-center\"><TimerOptions/></Col></Row>\n            </Container>\n            \n        </div>\n    )\n}\n","/Users/alan/side-projects/badgerdoro/client/src/components/images/user.js",[],"/Users/alan/side-projects/badgerdoro/client/src/components/Home.js",["42","43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":24,"nodeType":"52","messageId":"53","endLine":1,"endColumn":33},{"ruleId":"50","severity":1,"message":"54","line":23,"column":16,"nodeType":"52","messageId":"53","endLine":23,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":34,"column":13,"nodeType":"57","messageId":"58","endLine":47,"endColumn":14},{"ruleId":"50","severity":1,"message":"59","line":84,"column":15,"nodeType":"52","messageId":"53","endLine":84,"endColumn":27},{"ruleId":"50","severity":1,"message":"60","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"61","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":33},{"ruleId":"50","severity":1,"message":"62","line":2,"column":39,"nodeType":"52","messageId":"53","endLine":2,"endColumn":46},{"ruleId":"50","severity":1,"message":"63","line":2,"column":48,"nodeType":"52","messageId":"53","endLine":2,"endColumn":55},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'breakState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'onClickBreak' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Overlay' is defined but never used.","'Popover' is defined but never used.","no-global-assign","no-unsafe-negation"]